name: Staging

on:
  pull_request:
    branches: [ stage ]
  push:
    branches: [ stage ]

jobs:
  build:
    name: Staging (Build using Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up python & use dependencies cache
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install requirements 
        run: make requirements
      - name: Lint
        run: make lint
      - name: Build
        run: make build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist

  version:
    name: Staging (Verify Version)
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up python & use dependencies cache
        uses: actions/setup-python@v3
        with:
          python-version: '3'
          cache: 'pip'
      - name: Install requirements 
        run: make requirements
      - name: Download build artifacts
        uses: actions/download-artifact@v3
      - name: Check version
        run: make check-version PYPI_URL_JSON="https://test.pypi.org/pypi/pyrtkgps/json"

  stage:
    if: github.event_name == 'push'
    name: Staging (Deploy to TestPyPI)
    environment: staging
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - uses: actions/checkout@v3
      - name: Set up python & use dependencies cache
        uses: actions/setup-python@v3
        with:
          python-version: '3'
          cache: 'pip'
      - name: Install requirements 
        run: make requirements
      - name: Download build artifacts
        uses: actions/download-artifact@v3
      - name: Stage
        env:
          TEST_PYPI_API_SECRET: ${{ secrets.TEST_PYPI_API_SECRET }}
        run: make stage
